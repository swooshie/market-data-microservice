version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: market-db
    environment:
      POSTGRES_DB: market_data
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports: ["5432:5432"]
    volumes: [pgdata:/var/lib/postgresql/data]
    healthcheck:                      
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports: ["9092:9092"]
    depends_on: [zookeeper]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:                      
      test: ["CMD", "bash", "-c", "kafka-topics --bootstrap-server kafka:9092 --list"]
      interval: 10s
      timeout: 10s
      retries: 5
  redis:
    image: redis:7
    ports:
      - "6379:6379"

  api:
    build: .
    container_name: market-api
    ports: ["8000:8000"]
    volumes: [.:/app]
    depends_on:
      postgres:
        condition: service_healthy    # wait until pg_isready passes
      kafka:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@postgres:5432/market_data
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    command: >
      bash -c "
        python scripts/init_db.py &&      # migrate/prepare tables
        uvicorn app.main:app --host 0.0.0.0 --port 8000
      "
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080

volumes:
  pgdata: